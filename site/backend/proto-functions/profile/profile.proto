syntax = "proto3";

option go_package = "backend/proto/profile";
package functions;

service ProfileService {
    rpc GetUser(UserRequest) returns (UserResponse) {}
    rpc GetOrganization(OrganizationRequest) returns (OrganizationResponse) {}
    // Все организации, в которых состоит пользователь
    rpc GetOrganizationsByUserID(OrganizationUserRequest) returns (OrganizationUserListResponse) {}
    rpc GetOrganizationByOwnerUserID(OrganizationUserRequest) returns (OrganizationResponse) {}
    rpc GetUsersByIDS(GetUsersByIDsRequest) returns (GetUsersByIDsResponse) {}
    rpc IsUserAdmin(UserRequest) returns (UserAdminResponse) {}
}

message User {
    uint64 id = 1;
    string surname = 2;
    string name = 3;
    bool is_admin = 4;
}

message GetUsersByIDsRequest {
    repeated uint64 user_ids = 1;
}

message GetUsersByIDsResponse {
    repeated User users = 1;
}

message UserRequest {
    uint64 id = 1;
}

message UserResponse {
    string name = 1;
    string surname = 2;
    bool is_admin = 3;
}

message OrganizationRequest {
    uint64 id = 1;
}

message OrganizationResponse {
    string email = 1;
    uint64 status_id = 2;
    string name = 3;
    uint64 id = 4;
}

message OrganizationUserRequest {
    uint64 id = 1;
}

message OrganizationUserResponse {
    uint64 id = 1;
    bool isOwner = 2;
}

message OrganizationUserListResponse {
    repeated OrganizationUserResponse organizationUserResponse = 1;
}

message UserAdminResponse {
    bool isAdmin = 1;
}
