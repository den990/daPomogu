@startuml
!theme vibrant

package "Яндекс.Облако Kubernetes" as k8s {
  [Docker] as docker << (C, #FFAAAA) >>
  [Containers] as containers << (C, #FFAAAA) >>
}

package "Система обмена валют - обслуживание" as maintenance {
    actor "Системный администратор" as sys_admin
    package "Яндекс.Облако" as cloud {
      [Система мониторинга Zabbix] as monitoring_service << (C, #FFAAAA) >>
      [Система бэкапов Velero] as backup_service << (C, #FFAAAA) >>
    }
}

package "Внешние сервисы" as outer_services {
    package "Канал уведомлений" as notifications {
        [Почтовый шлюз] as email_service << (C, #FFAAAA) >>
    }
}

package "Разработка" as development {
    actor "Разработчик" as developer
    [Система контроля версий (Git GitLab)] as vcs << (C, #FFAAAA) >>
    [CI/CD GitLab (Ветка main)] as cicd << (C, #FFAAAA) >>
    [CI/CD GitLab (Ветка dev)] as cicdtest << (C, #FFAAAA) >>
    
    package "CI/CD Pipeline (PROD)" as build {
      [Build Stage] as buildstage << (C, #FFAAAA) >>
      [Testing Stage] as testingstage << (C, #FFAAAA) >>
    }

    package "CI/CD Pipeline (TEST)" as buildtest {
      [Build Stage Test] as buildstagetest << (C, #FFAAAA) >>
      [Testing Stage Test] as testingstagetest << (C, #FFAAAA) >>
    }

    [Реестр контейнеров GitLab] as containeregistry << (C, #FFAAAA) >>
}

sys_admin --> monitoring_service : "Мониторинг состояния системы"
sys_admin --> backup_service : "Контроль и восстановление данных"
monitoring_service --> email_service : "Уведомления о сбоях и предупреждениях"
developer --> vcs : "PUSH коммитов"
vcs --> cicd : "CI/CD для PROD"
vcs --> cicdtest : "CI/CD для dev"
cicd --> buildstage : "Запуск pipeline"
cicdtest --> buildstagetest : "Запуск pipeline"
buildstage --> containeregistry : "Сборка Docker-образов и PUSH"
buildstagetest --> containeregistry : "Сборка Docker-образов и PUSH"
containeregistry <-- testingstage : "PULL Docker-образов"
containeregistry <-- testingstagetest : "PULL Docker-образов"
buildstage --> testingstage : "PASS"
buildstagetest --> testingstagetest : "PASS"
testingstage --> docker : "PULL обновлений [SSH] (Тэг main)"
testingstagetest --> docker : "PULL обновлений [SSH] (Тэг dev)"
docker --> containeregistry : "PULL Docker-образов"
docker --> containers : "Обновление и развёртка контейнеров"
monitoring_service --> containers : "Проверка состояния"
backup_service --> containers : "Создание и восстановление бэкапов"

@enduml