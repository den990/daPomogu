@startuml C4. Контейнер

title C4. Контейнер

!include <C4/C4_Container>
!$ICONURL = "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons"
!include $ICONURL/common.puml
!include $ICONURL/devicons/react.puml
!include $ICONURL/devicons/go.puml
!include $ICONURL/devicons/postgresql.puml
!include $ICONURL/devicons2/sqlite.puml

Person(admin, "Администратор", "Модерирует учётные записи и задания")
Person(organizer, "Организация", "Размещает и редактирует задания, назначает координатора")
Person(user, "Волонтер", "Откликается на задания")
Person(coordinator, "Координатор", "Контролирует выполнение заданий, оставляет оценки волонтерам")

System_Boundary(taxiService, "Volunteer сервис") {
    System_Boundary(services, "Сервисы") {
    
        Container(auth_service, "Шлюз авторизации и аутентификации", "Go", "", $sprite="go")
        Container(users_service, "Сервис управления пользователей", "Go", $sprite="go")
        Container(logging_service, "Сервис логирования", "Go", $sprite="go")
        Container(session_service, "Сервис сессий", "Go", $sprite="go")
        Container(notification_service, "Сервис уведомлений", "Go", $sprite="go")
        Container(rating_service, "Сервис рейтинга", "Go", $sprite="go")
        Container(task_service, "Сервис заданий", "Go", $sprite="go")
        Container(chat_service, "Сервис чата", "Go", $sprite="go")
        Container(search_task_service, "Сервис поиска заданий", "Go", $sprite="go")
    }
    Container(application_react, "Клиентское приложение", "React", $sprite="react")
    Container(database, "База данных", "PostgreSQL", "", $sprite="postgresql")
    Container(kafka, "Брокер сообщений", "Kafka", "")
}

Rel(admin, application_react, "Посещает", "HTTPS")
Rel(organizer, application_react, "Посещает", "HTTPS")
Rel(user, application_react, "Посещает", "HTTPS")
Rel(coordinator, application_react, "Посещает", "HTTPS")



System_Ext(email, "Email сервис", "Отправка уведомлений")
System_Ext(map_service, "Система картографии(Yandex Map)", "Предоставление адреса по координатам")

Rel(notification_service, email, "API вызовы", "REST API")
Rel(task_service, map_service, "API вызовы", "REST API")
Rel(search_task_service, map_service, "API вызовы", "REST API")

Rel(services, database, "API вызовы", "REST API")
Rel(application_react, services, "API вызовы", "REST API")
@enduml